name: Windows unit tests
on:
  push:
    branches: ['**']
    tags-ignore: ['**']
  pull_request:
  schedule:
    - cron: '0 2 * * *'
jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        ruby: [2.3, 2.7, 3.0, jruby]
    runs-on: ${{ matrix.os }}
    # runs-on: self-hosted
    # Self-hosted needs:
    # - 7z installing and adding to path
    # - Set-ExecutionPolicy -ExecutionPolicy Unrestricted -Scope LocalMachine
    # - install chocolatey
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        env:
          ImageOS: win19
        with:
          ruby-version: ${{ matrix.ruby }}
      - name: Install Ruby Dependencies
        run: bundle install --path vendor/bundle --jobs=3 --retry=3
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      #- name: Install Glib
      #  run: |
      #    pacman -S mingw-w64-x86_64-toolchain base-devel --noconfirm
      #    pacman -S mingw-w64-x86_64-glade --noconfirm
      #    pacman -S mingw-w64-x86_64-gtk3 --noconfirm
      #    pacman -S mingw-w64-x86_64-python3-gobject --noconfirm
      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pycairo
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Install Graphviz
        run: |
          cinst graphviz -r -y --no-progress
          dot -c
      - name: Install BPNM-JS
        run: npm install -g bpmn-js-cmd
      - name: Install AsciitoSVG       
        run: go get github.com/asciitosvg/asciitosvg/cmd/a2s
      - name: Install Bytefield-SVG
        run: npm install -g bytefield-svg
      - name: Install Mermaid
        run: npm install -g @mermaid-js/mermaid-cli
      - name: Install NomNoml
        run: npm install -g nomnoml
      - name: Install Blockdiag
        run: pip install blockdiag[pdf] actdiag seqdiag nwdiag[pdf]
      - name: Install StateMachineCat
        run: npm install -g state-machine-cat
      - name: Install Vega
        run: |
          npm install -g vega-cli
          npm install -g install-peerdeps
          install-peerdeps -g vega-lite
      - name: Install Wavedrom
        run: npm install -g wavedrom-cli
      - name: Install LilyPond
        run: |
          cinst lilypond -r -y --no-progress
          echo "C:\Program Files (x86)\LilyPond\usr\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - name: Install ImageMagick
        run: |
          cinst imagemagick -r -y --no-progress
          echo "C:\Program Files\ImageMagick-7.0.10-Q16-HDRI" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - name: Install Erd
        run: |
          cabal update
          cabal new-install erd --install-method=copy
      - name: Install Gnuplot
        run: |
          cinst gnuplot -r -y --no-progress
          echo "C:\Program Files\gnuplot\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          Set-Content -Path $env:APPDATA\gnuplot.ini -Value 'set term debug'
      - name: Install Svgbob
        run: cargo install svgbob_cli
      - name: Install UMLet
        run: |
          Invoke-WebRequest -Uri "http://www.umlet.com/umlet_14_2/umlet-standalone-14.2.zip" -OutFile umlet.zip
          7z x umlet.zip
          echo "$PWD/Umlet" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          echo "C:\npm\prefix" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - name: Run tests
        run: bundle exec rake test
